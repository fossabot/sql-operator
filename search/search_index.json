{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is SQL-operator \u00b6 SQL-operator is a component that managed SQL resources for you. SQL-operator is implemented as a Kubernetes CRD (Custom Resource Definition).","title":"Overview"},{"location":"#what-is-sql-operator","text":"SQL-operator is a component that managed SQL resources for you. SQL-operator is implemented as a Kubernetes CRD (Custom Resource Definition).","title":"What is SQL-operator"},{"location":"core-concepts/","text":"Core concepts \u00b6 SqlHost \u00b6 SqlDatabase \u00b6 SqlUser \u00b6 SqlGrant \u00b6","title":"Core concepts"},{"location":"core-concepts/#core-concepts","text":"","title":"Core concepts"},{"location":"core-concepts/#sqlhost","text":"","title":"SqlHost"},{"location":"core-concepts/#sqldatabase","text":"","title":"SqlDatabase"},{"location":"core-concepts/#sqluser","text":"","title":"SqlUser"},{"location":"core-concepts/#sqlgrant","text":"","title":"SqlGrant"},{"location":"getting-started/","text":"Getting started \u00b6","title":"Getting started"},{"location":"getting-started/#getting-started","text":"","title":"Getting started"},{"location":"extras/argocd/","text":"ArgoCD \u00b6 When installing using ArgoCD you will need to tell ArgoCD to ignore some changes. The helm chart makes use of genSignedCert to configure and secure the webhooks. Because of this implementation, each helm template will cause a change and will as a result keep creating differences for ArgoCD to deploy. Luckily ArgoCD has a buildin mechanism to handle these kinds of workflows. The example below can be used to ignore these changes. apiVersion : argoproj.io/v1alpha1 kind : Application spec : ignoreDifferences : - group : admissionregistration.k8s.io kind : ValidatingWebhookConfiguration jsonPointers : - /webhooks/0/clientConfig/caBundle - /webhooks/1/clientConfig/caBundle - group : admissionregistration.k8s.io kind : MutatingWebhookConfiguration jsonPointers : - /webhooks/0/clientConfig/caBundle - /webhooks/1/clientConfig/caBundle - group : \"\" kind : Secret jsonPointers : - /data/tls.key - /data/tls.crt - group : \"apps\" kind : Deployment jsonPointers : - /spec/template/metadata/annotations/checksum~1admission-webhook.yaml","title":"ArgoCD"},{"location":"extras/argocd/#argocd","text":"When installing using ArgoCD you will need to tell ArgoCD to ignore some changes. The helm chart makes use of genSignedCert to configure and secure the webhooks. Because of this implementation, each helm template will cause a change and will as a result keep creating differences for ArgoCD to deploy. Luckily ArgoCD has a buildin mechanism to handle these kinds of workflows. The example below can be used to ignore these changes. apiVersion : argoproj.io/v1alpha1 kind : Application spec : ignoreDifferences : - group : admissionregistration.k8s.io kind : ValidatingWebhookConfiguration jsonPointers : - /webhooks/0/clientConfig/caBundle - /webhooks/1/clientConfig/caBundle - group : admissionregistration.k8s.io kind : MutatingWebhookConfiguration jsonPointers : - /webhooks/0/clientConfig/caBundle - /webhooks/1/clientConfig/caBundle - group : \"\" kind : Secret jsonPointers : - /data/tls.key - /data/tls.crt - group : \"apps\" kind : Deployment jsonPointers : - /spec/template/metadata/annotations/checksum~1admission-webhook.yaml","title":"ArgoCD"}]}